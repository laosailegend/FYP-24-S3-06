/// <reference types="node" />
import * as fs from 'fs';
import { build } from 'esbuild';
export declare const argsDefatuls: {
    entry: string;
    external: never[];
    metafile: boolean;
    region: string;
    lambdas: never[];
};
export interface BundlingResult {
    bundle: string;
    meta?: string;
}
export interface ArhcivingResult extends BundlingResult {
    archive: Buffer;
    archiveSize: string;
}
declare type Builder = {
    build: typeof build;
};
export declare class LambdaBuildCore {
    private builder;
    private fsys;
    constructor(builder: Builder, fsys: typeof fs);
    bundleAndArchive: (entry: string, external: string[], isMetafile: boolean) => Promise<ArhcivingResult>;
    publishLambda: (region: string, functionName: string, archive: Buffer) => Promise<string | undefined>;
    private determineEntry;
    private createBundle;
    private getBundleSize;
    private createArchive;
}
export {};
