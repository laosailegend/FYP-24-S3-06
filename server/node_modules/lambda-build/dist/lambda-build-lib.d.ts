/// <reference types="node" />
import { LambdaBuildCore } from './lambda-build-core';
export interface BuildArchiveArgs {
    entry?: string;
    external?: string[];
    metafile?: boolean;
}
export interface BuildRes {
    archive: Buffer;
    archiveSize: string;
    meta?: string;
}
export interface BuildAndUploadArgs {
    lambdas: string[];
    entry?: string;
    external?: string[];
    metafile?: boolean;
    region?: string;
}
export interface BuildAndUploadRes {
    archive: Buffer;
    archiveSize: string;
    meta?: string;
    updatedArns: string[];
}
export declare class LambdaBuildLib {
    private lambdaBuildCore;
    constructor(lambdaBuildCore: LambdaBuildCore);
    build: (args?: BuildArchiveArgs | undefined) => Promise<BuildRes>;
    buildAndUpload: (args: BuildAndUploadArgs) => Promise<BuildAndUploadRes>;
}
